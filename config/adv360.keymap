
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
        ctr_z: control_z {
            compatible = "zmk,behavior-mod-morph";
            label = "CONTROL_Z";
            #binding-cells = <0>;
            bindings = <&lt 1 Y>, <&kp Z>;
            mods = <(MOD_LCTL)>;
            keep-mods = <(MOD_LCTL)>;
        };
        ctr_y: control_y {
            compatible = "zmk,behavior-mod-morph";
            label = "CONTROL_Y";
            #binding-cells = <0>;
            bindings = <&kp Z>, <&kp Y>;
            mods = <(MOD_LCTL)>;
            keep-mods = <(MOD_LCTL)>;
        };
        win_up: windows_up {
            compatible = "zmk,behavior-mod-morph";
            label = "WINDOWS_UP";
            #binding-cells = <0>;
            bindings = <&kp C>, <&kp UP>;
            mods = <(MOD_RGUI)>;
            keep-mods = <(MOD_RGUI)>;
        };
        win_down: windows_down {
            compatible = "zmk,behavior-mod-morph";
            label = "WINDOWS_DOWN";
            #binding-cells = <0>;
            bindings = <&kp V>, <&kp DOWN>;
            mods = <(MOD_RGUI)>;
            keep-mods = <(MOD_RGUI)>;
        };
        win_esc: windows_esc {
            compatible = "zmk,behavior-mod-morph";
            label = "WINDOWS_ESC";
            #binding-cells = <0>;
            bindings = <&kp B>, <&kp ESC>;
            mods = <(MOD_RGUI)>;
        };
        tdu: tap_dance_u {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_U";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp U>, <&macro_ue>;
        };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp EQUAL       &kp N1     &kp N2    &kp N3     &kp N4    &kp N5                     &tog 1      &mo 3        &kp N6     &kp N7     &kp N8     &kp N9     &kp N0  &kp MINUS
   &kp TAB        &kp Q      &kp W     &kp E      &kp R     &kp T            &kp PRINTSCREEN  &kp K_APP         &ctr_y      &kp U      &kp I      &kp O      &kp P   &kp BSLH
   &kp ESC        &kp A      &kp S     &kp D      &kp F     &kp G                   &kp ENTER  &kp LCTRL  &kp LEFT_ALT                         &kp LGUI  &kp LCTRL   &kp CAPS     &kp H  &lt 4 J      &kp K    &kp L  &kp SEMI  &macro_simquote
 &kp LSHFT      &ctr_z      &kp X     &win_up      &win_down     &win_esc                      &none      &none      &kp HOME      &none      &none  &kp PG_UP      &none      &none     &kp N    &kp M  &kp COMMA  &kp DOT  &lt 6 FSLH  &kp RIGHT_SHIFT
     &mo 2  &lt 4 GRAVE  &kp RGUI  &kp LEFT  &kp RIGHT  &kp BSPC                    &kp DEL    &kp END     &kp PG_DN  &kp ENTER  &kp SPACE     &kp UP   &kp DOWN   &kp LBKT  &kp RBKT    &mo 2
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL       &kp N1             &kp N2      &kp N3      &kp N4         &kp N5                     &trans      &mo 3     &kp N6  &kp KP_NUM  &kp EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY   &kp MINUS
   &kp TAB  &macro_euro          &kp C_VOL_UP  &kp C_NEXT    &kp C_PP          &kp F11            &kp PRINTSCREEN     &trans      &kp F6   &kp KP_N7  &kp KP_N8      &kp KP_N9     &kp KP_MINUS    &kp BSLH
   &kp ESC       &trans          &macro_ue   &macro_ae   &macro_oe  &macro_ssharp            &kp ENTER  &kp LCTRL   &kp LALT                              &kp LGUI        &kp RCTRL      &trans     &kp F5  &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_PLUS    &kp SQT
 &kp LSHFT       &trans  &kp C_VOLUME_DOWN  &kp C_PREV  &kp C_MUTE          &macro_altf4                      &none      &none   &kp HOME       &none      &none      &kp PG_UP            &none       &none     &kp F4  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_ENTER  &kp RSHFT
     &mo 2    &kp GRAVE          &kp RGUI    &kp C_RW    &kp C_FF          &mo 5                    &kp DEL    &kp END  &kp PG_DN   &kp ENTER  &kp KP_N0         &kp UP         &kp DOWN  &kp KP_DOT  &kp RBKT      &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2            &kp F3      &kp F4      &kp F5  &kp F6            &tog 1   &mo 3  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans            &trans      &trans      &trans  &trans             &none   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans      &kp C_VOL_UP  &kp C_NEXT    &kp C_PP  &trans             &none  &trans  &trans                   &trans   &trans    &none  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans      &kp C_VOL_DN  &kp C_PREV  &kp C_MUTE  &trans             &none   &none  &trans   &none   &none   &trans    &none    &none  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &kp C_PLAY_PAUSE    &kp C_RW    &kp C_FF  &trans            &trans  &trans  &trans  &trans  &trans   &trans   &trans   &trans  &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4                             &none       &trans  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none
  &none         &none         &none         &none         &none            &none                       &bootloader  &bootloader         &none         &none            &none         &none         &none                   &none
  &none         &none         &none         &none         &none            &none            &rgb_ug RGB_MEFS_CMD 5   &bt BT_CLR         &none                                   &bt BT_CLR    &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5   &none   &none   &none   &none   &none   &none
  &none         &none         &none         &none         &none            &none                             &none        &none         &none         &none            &none         &none         &none                   &none   &none   &none   &none   &none   &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC  &rgb_ug RGB_TOG                        &bl BL_TOG        &none         &none    &bl BL_TOG  &rgb_ug RGB_TOG    &bl BL_INC    &bl BL_DEC                   &none   &none   &none
            >;
        };

        layer_Arrow {
            bindings = <
 &trans          &trans          &trans          &trans           &trans            &trans                    &trans            &trans  &trans  &trans          &trans    &trans          &trans           &trans
 &trans          &trans        &kp HOME    &kp UP_ARROW          &kp END         &kp GREATER_THAN                    &trans            &trans  &trans  &trans        &kp STAR  &kp HASH          &trans           &trans
 &trans          &kp MINUS  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp EQUAL                    &trans  &kp LEFT_CONTROL  &trans                            &trans          &trans           &trans         &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &macro_parens   &macro_quotes
 &trans  &kp LEFT_SHIFT        &kp PG_DN       &kp PLUS          &kp PG_UP     &kp LESS_THAN                    &trans            &trans  &trans  &trans          &trans    &trans          &trans           &trans         &trans  &trans      &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &macro_brackets  &macro_dquotes
 &trans          &trans       &kp DOLLAR       &kp AMPERSAND         &kp AT         &kp LCTRL            &kp LEFT_SHIFT            &trans  &trans  &trans  &kp UNDERSCORE    &trans  &kp LEFT_BRACE  &kp RIGHT_BRACE  &macro_braces  &trans
            >;
        };

        layer_FN2 {
            bindings = <
 &trans  &trans   &trans   &trans   &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &kp F10  &kp F11  &kp F12  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans   &kp F7   &kp F8   &kp F9  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans   &kp F4   &kp F5   &kp F6  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans   &kp F1   &kp F2   &kp F3  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_ctrlalt {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &sk LEFT_SHIFT  &sk LGUI  &sk LEFT_ALT  &sk LCTRL  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans        &trans        &trans     &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans        &trans
            >;
        };
    };
};
